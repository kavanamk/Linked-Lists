
class Solution(object):
    def reverseLL(self, head, tail):
        prev = None
        cur = head
        while cur != tail:
            nxt = cur.next
            cur.next = prev
            prev = cur
            cur = nxt
        return prev

    def reverseBetween(self, head, left, right):
        if not head or left == right:
            return head
        
        # Dummy node to handle cases where left == 1
        dummy = ListNode(0)
        dummy.next = head
        prev = dummy

        # Move `prev` to one node before the `left`-th node
        for _ in range(left - 1):
            prev = prev.next
        
        # The `start` is the first node in the sublist that will be reversed
        start = prev.next
        # `then` is the node that will be reversed first
        then = start.next

        # Reverse the sublist
        for _ in range(right - left):
            start.next = then.next
            then.next = prev.next
            prev.next = then
            then = start.next
        
        return dummy.next
